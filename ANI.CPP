#include <graphics.h>
#include <stdio.h>
#include <conio.h>
#include <dos.h>
#include <stdlib.h>

#define ImageWidth 15
void draw(int fc,int bc,int fromx,int fromy,char image[][ImageWidth],int x1,int y1,int x2,int y2,int mf);


int main()
{
    int a,b;
    detectgraph(&a,&b);
    initgraph(&a,&b,"\\turbo-c\\bgi");


      char image[25][15]={
		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,0,1,0,1,1,0,1,0,0,0,0},
		 { 1,1,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 1,1,0,0,1,1,0,0,1,1,0,0,0,0},
		 { 1,1,0,0,0,0,1,1,0,0,0,0,0,0},
		 { 0,1,1,1,0,0,1,1,0,0,0,0,0,0},
		 { 0,1,1,1,1,1,1,1,1,1,1,1,0,0},
		 { 0,0,1,1,1,1,1,1,1,1,1,1,1,1},
		 { 0,0,0,0,1,1,1,1,1,1,1,1,1,1},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,1,1},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,1,1},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,1,1},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,1,1,1,1,1,1,1,1,0,0,0},
		 { 0,1,1,1,1,1,0,0,1,1,1,1,1,0},
		 { 0,1,1,1,1,0,0,0,0,1,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0}

	      };
      char image1[25][15]={
		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,0,1,0,1,1,0,1,0,0,0,0},
		 { 0,0,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,0,1,1,0,0,1,1,0,0,0,1},
		 { 0,0,0,0,0,0,1,1,0,0,0,0,1,1},
		 { 0,0,0,0,0,0,1,1,0,0,0,1,1,1},
		 { 0,0,1,1,1,1,1,1,1,1,1,1,1,1},
		 { 0,1,1,1,1,1,1,1,1,1,1,1,0,0},
		 { 1,1,1,1,1,1,1,1,1,0,0,0,0,0},
		 { 1,1,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 1,1,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 1,1,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,1,1,1,1,1,1,1,1,0,0,0},
		 { 0,1,1,1,1,1,0,0,1,1,1,1,1,0},
		 { 0,1,1,1,1,0,0,0,0,1,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0}

	      };
      char image2[25][15]={
		 { 0,0,0,0,0,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,1,0,0,0,0,0,0,0,1,0,0},
		 { 0,1,0,0,0,0,1,1,0,0,0,0,1,0},
		 { 1,0,0,0,0,1,1,1,1,0,0,0,0,1},
		 { 1,1,0,0,0,0,1,1,0,0,0,0,1,1},
		 { 1,0,0,1,0,0,0,0,0,0,0,1,0,1},
		 { 1,0,0,0,0,1,1,1,1,1,0,0,0,1},
		 { 1,0,0,0,0,0,0,0,0,0,0,0,1,0},
		 { 0,1,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,1,0,0,0,0,0,0,0,0,0,1,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,0,1,0,0,0,0,0,0,0,1,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,0,0,1,0,0,0,0,0,1,0,0,0,0},
		 { 0,0,0,0,1,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0}

	      };
/*
      char image[25][15]={
		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,0,1,0,1,1,0,1,0,0,0,0},
		 { 1,1,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 1,1,0,0,1,1,0,0,1,1,0,0,0,0},
		 { 1,1,0,0,0,0,1,1,0,0,0,0,0,0},
		 { 0,1,1,1,0,0,1,1,0,0,0,0,0,0},
		 { 0,1,1,1,1,1,1,1,1,1,1,1,0,0},
		 { 0,0,1,1,1,1,1,1,1,1,1,1,1,1},
		 { 0,0,0,0,1,1,1,1,1,1,1,1,1,1},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,1,1},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,1,1},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,1,1},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,1,1,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,1,1,1,0,1,1,1,1,0,0,0},
		 { 0,0,1,1,1,0,0,0,1,1,1,0,0,0},
		 { 0,0,1,1,1,0,0,0,1,1,1,0,0,0},
		 { 0,1,1,1,1,0,0,0,1,1,1,0,0,0},
		 { 1,1,1,0,0,0,0,0,1,1,1,0,0,0},
		 { 1,1,0,0,0,0,0,1,1,1,0,0,0,0},
		 { 0,0,0,0,0,0,1,1,1,0,0,0,0,0},
		 { 0,0,0,0,0,1,1,1,0,0,0,0,0,0},
		 { 0,0,0,0,0,1,1,1,0,0,0,0,0,0}

	      };
      char image1[25][15]={
		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,0,1,0,1,1,0,1,0,0,0,0},
		 { 0,0,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,0,1,1,0,0,1,1,0,0,0,1},
		 { 0,0,0,0,0,0,1,1,0,0,0,0,1,1},
		 { 0,0,0,0,0,0,1,1,0,0,0,1,1,1},
		 { 0,0,1,1,1,1,1,1,1,1,1,1,1,1},
		 { 0,1,1,1,1,1,1,1,1,1,1,1,1,0},
		 { 1,1,1,1,1,1,1,1,1,0,0,0,0,0},
		 { 1,1,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 1,1,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 1,1,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,1,1,1,1,1,1,1,1,0,0,0},
		 { 0,1,1,1,1,1,0,0,1,1,1,1,1,0},
		 { 0,1,1,1,1,0,0,0,0,1,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0}

	      };
*/
/*
  draw(15,0,100,100,image,0,0,10,10);
  draw(15,0,100,100,image,10,10,15,25);
  draw(15,0,100,100,image,10,0,15,10);
  draw(15,0,100,100,image,0,10,15,25);
  draw(15,0,100,100,image,0,0,10,10);
  draw(15,0,100,100,image,0,0,10,10);
*/
int i = 100;
setfillstyle(1,0);
do
{

  draw(15,0,i,100,image ,0,0,15,25,5);
  draw(15,0,i,115,image2,0,0,15,15,5);
  delay(400);

  draw(15,0,i,100,image1,0,0,15,25,5);
  draw(15,0,i,115,image2,0,0,15,15,5);
  delay(400);

	sound(400);delay(250);
	sound(500);delay(210);
	bar(90,90,130,150);
	nosound();
}
while( !kbhit());
  getch();
  return 0;
}



void draw(int fc,int bc,int fromx,int fromy,char image[][ImageWidth],int x1,int y1,int x2,int y2,int mf)
{
      int x,y;
      for( x = x1 ; x < x2 ; x++)
      {
       for( y = y1 ; y < y2 ; y++)
       {
	if(image[y][x] == 1)
	{
	     putpixel( fromx+x , fromy+y , fc);
	}
	else
	{
	     putpixel( fromx+x , fromy+y , bc);
	}

       }
      }

  return;
}
/*
void draw_parashute(int fc,int bc,int fromx,int fromy)
{
      int x,y;
      cleardevice();
      char image[42][15]={
		 { 0,0,0,0,0,1,1,1,0,0,0,0,0,0},
		 { 0,0,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,1,1,1,1,1,1,1,1,0,0,0},
		 { 0,0,1,1,1,1,1,1,1,1,1,1,0,0},
		 { 0,1,1,1,1,1,1,1,1,1,1,1,1,0},
		 { 1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		 { 1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		 { 1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		 { 1,0,0,0,0,0,0,0,0,0,0,0,0,1},
		 { 0,1,0,0,0,0,0,0,0,0,0,0,1,0},
		 { 0,0,1,0,0,0,0,0,0,0,0,1,0,0},
		 { 0,0,0,1,0,0,0,0,0,0,1,0,0,0},
		 { 0,0,0,0,1,0,0,0,0,1,0,0,0,0},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,0,0,0,1,1,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,1,1,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,1,1,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,0,1,0,1,1,0,1,0,0,0,0},
		 { 0,0,0,0,1,1,1,1,1,1,0,0,0,0},
		 { 0,0,0,0,1,1,0,0,1,1,0,0,0,0},
		 { 0,0,0,0,0,0,1,1,0,0,0,0,0,0},
		 { 0,0,0,0,0,0,1,1,0,0,0,0,0,0},
		 { 0,0,1,1,1,1,1,1,1,1,1,1,0,0},
		 { 1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		 { 1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		 { 1,1,0,0,0,1,1,1,1,0,0,0,1,1},
		 { 1,1,0,0,0,1,1,1,1,0,0,0,1,1},
		 { 1,1,0,0,0,1,1,1,1,0,0,0,1,1},
		 { 0,0,0,0,0,1,1,1,1,0,0,0,0,0},
		 { 0,0,0,1,1,1,1,1,1,1,1,0,0,0},
		 { 0,1,1,1,1,1,0,0,1,1,1,1,1,0},
		 { 0,1,1,1,1,0,0,0,0,1,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0},
		 { 0,1,1,1,0,0,0,0,0,0,1,1,1,0}

	      };



      for(y = 0 ; y < 42 ; y++)
      {
	 for( x = 0 ; x < 15 ; x++)
	 {
	     if(image[y][x] == 1)
	     {
	  putpixel(x+fromx,y+fromy,fc);
             }
             else
             {
	  putpixel(x+fromx,y+fromy,bc);
             }
         }
      }
      for( int t = 0 ; t < 5 ; t++)
      {
           para[t] = malloc(imagesize(0,0,16,42));
	   getimage(0,0,16,42,para[t]);
      }
  draw_color(5,5,image);
  return;
}

void draw_color(int fromx,int fromy,char *image)
{
      int x,y;
      for(y = 0 ; y < 42 ; y++)
      {
         for( x = 0 ; x < 15 ; x++)
         {
	      switch(image[y][x])
              {
	        case 0:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 1:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 2:
		putpixel(x+fromx,y+fromy,0);break;
	        case 3:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 4:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 5:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 6:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 7:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 8:
	        putpixel(x+fromx,y+fromy,0);break;
		case 9:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 10:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 11:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 12:
		putpixel(x+fromx,y+fromy,0);break;
	        case 13:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 14:
	        putpixel(x+fromx,y+fromy,0);break;
	        case 15:
	        putpixel(x+fromx,y+fromy,0);break;
              }
         }
      }
}
*/
